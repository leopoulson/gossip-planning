* Thesis Notes

* Thesis Structure
** Introduction (<5 pages)
*** Motivate
*** State Contributions 
    We need to make clear exactly what we're putting forward; namely the
    algorithm and the implementation.

    In here, we need to argue that the contributions are: 

**** Important 
     The fact that there's so much literature on the topic is a testament to the it being an important work. 
     Perhaps we can convey this point in the general introduction part. 

     It would be also good to mention the motivations for using an automata
     method for the project. 

**** New 
     We need to show that what we've done is new; to do this we can just exhaust
     the lit review and show that there isn't anything else that achieves what
     we're setting out to do.

     We can mention that there are existing checkers for this (e.g. DEMO-S5,
     SMCDEL, ...), but none that perform it using the automata approach. We can
     also just cite the (modern) papers on the topic. 

**** Interesting 
     Here, we can just discuss the gossip problem in itself. It *is* an
     interesting topic, and as such we can just talk about it; little particular
     dressing up needs to be done in this section.

**** Difficult / Challenging / Worthy of 3rd year project
     This is probably the most difficult section to write. Here we need to
     discuss why this task will be / is difficult; mainly discuss that there's a
     lot of new background and theory that took a lot of time to understand.

     We can try and mention the explicit challenges that we face throughout the
     project. This lays it out very clearly to the marker.
*** Purpose
    The purpose of this chapter is to communicate to the reader precisely what
    our contributions are, what they do, and why they are worthwhile. 

    This statement is one of the most important parts of the whole thesis, and
    the marker will most likely have some idea of what mark they will give it
    based on the ideas put forward in the introduction.
*** Structure 
**** General Introduction
     Introduce the problem, etc
**** Perhaps some kind of project aim section?
**** Motivation
     Talk about why it's interesting and why to spend so much time on it
***** Introduction to the classic gossip problem
***** Introduction to the dynamic gossip problem
***** Applications (mainly networking)
      This would be a good part to mention how many people there are studying
      the gossip problem; to make it clear that the project is important. 
***** Provide some examples of gossip solvers / model checkers from the literature. 
***** An introduction to planning, especially epistemic planning. 
***** TODO: Find an example of the gossip problem requiring that every agent knows everyone is an expert. 
**** Declare contributions
     Bezier curve example has a good section on this; just bullet pointing them.
     It would be good to talk about the *challenges*; this would convey to the
     marker where the difficulties came from. 
***** Formalising the algorithm discussed in the paper
***** Implementation in Haskell
***** How our system improves on the existing software available? 
***** Unification of these different areas (DEL, automated planning...)
** Background (10-15 pages)
*** Purpose
    The purpose of this chapter is to guide the marker through my work and make
    sure they understand it enough to see what's going on in the later parts.
*** Teaching 
    Essentially just keep elaborating on what's already in my background chapter. 
*** Literature review
    We need to show that we're very comfortable with the surrounding literature and have exhausted it. 
    Two important subpoints: 
**** Discussion of other tools 
     Here we need to mention what exists, in order to later compare our tool against the existing. This will be Malvin's two, as well as perhaps JvE's work. 
     We should also make clear here that there's nothing else that does what we're planning to do. 
**** Account of general theory of uniform strategies
     We should give a basic overview of what uniform strategies are about, to the end of showing to the marker that our algorithm is a special case of this.
     It need not be a perfect explanation, but enough to show where our approach is coming from. 
*** Structure
    Do we want to introduce DEL or GP first? 
**** Introduce DEL, and its semantics
***** DONE The language of EL
      CLOSED: [2019-04-06 Sat 15:40]
***** DONE Kripke models
      CLOSED: [2019-04-06 Sat 16:05]
****** TODO Check if the set of worlds in a Kripke model needs to be finite
***** DONE Evaluation on Kripke models
      CLOSED: [2019-04-06 Sat 16:43]
***** DONE Properties of knowledge;
      CLOSED: [2019-04-06 Sat 17:22]
      We should mention that the knowledge operator is an equivalence relation,
      and that this will be the case thoroughout the thesis. 

      We could also mention porperties of knowledge if we don't have certian
      axioms. 
***** Event models
      We should probably give a worked example for this part; or just an example
      of an event model. We could just use the gossip problem?
***** A long example of all of it 
      Perhaps just a toy example with two agents. We could just lift the Alice &
      Bob example from Gattinger thesis? It would probably be quite nice to not
      do an example in gossip problem, as we won't have introduced it yet
**** Formalise the gossip problem
***** Introduce it as in Tij71?
***** 
**** 
** Algorithm & Implementation (10-20 pages)
*** Purpose 
    The purpose of this section is to back up what we said in the initial section; that our work has been difficult and challenging. 
    We want to communicate that we have indeed done a substantial piece of work. 
*** Algorithm
    In here, we want to give an overview of what the algorithm consists of. This should include an example run. 
    We also need to make clear our contributions; what does this do, what does it add, etc
*** Implementation 
    Here we would like to discuss implementation details and design choices.
**** Why Haskell
      In this we can mention exploiting laziness, etc

**** Why not to use an automata library 
     Not a particular reason for this as it stands lol. Perhaps this can be to do with the weirdness w/ the SSFST and normal FST composition? 
    
** Evaluation (5-10 pages)
*** Purpose
    Here we need to argue that we have *evidence* that we've *achieved* that which we say we had in the beginning. This is *backing up* our claims.
    Note that the evaluation is commonly seen as a mark of a good project; a flimsy evaluation suggests that the writer has not really considered their work.
    It is *definitely* in our interest to work hard on this section and fill it with good information. 

*** Content
**** Plan for testing 
     Here we can talk about why we did testing in the way that we did and so on. 
     Make sure to emphasise that we did consider the test plan prior to starting, and that it's been thought over heavily; this will no doubt reflect well than just going in willy-nilly
**** Test results and comparison 
     This is going to attest to what we say in the intro, about whether or not our implementation is optimal and so on. Make sure to profile Malvin's stuff and whatever. Would be great to discuss why these things occur. 
**** Sketch proof of correctness
     Unsure about this. Perhaps this will just come as a direct consequence of it being derived from the uniform strategies section? 
**** Point out negatives and explain
     This is a really important part; if we have any negatives (trust me we DO) it would be very good to explain where these negatives come from. 
**** Discussion of optimisation
     Again this is just a chance to mention how we made it quick. Got a good history of this in the notes so this should be fine!

** Conclusion and Future Work (~3 pages)
**** Reflection, summary, future work 
* To ask about 
  - Is it too early to introduce propositional pre- / post-conditions? 
